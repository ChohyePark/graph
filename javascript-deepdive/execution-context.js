
// 실행 컨텍스트의 역할 : 소스 코드를 실행하는 데 필요한 환경을 제공하고 코드의 실행 결과를 식제로 관리하는 영역이다.


// 전역 변수 선언
const x = 1;
const y = 2;

// 함수 정의
function foo(a) {
  //지역 변수 선언
  const x = 10;
  const y = 20;
  
  // 메서드 호출
  console.log(a + x + y); // 130
}

// 함수 호출
foo(100);

// 메서드 호출
console.log(x+y); // 3


// 1. 전역코드 평가 - 전역 코드의 변수 선언문과 함수 선언문 먼저 실행,전역 스코프 등록 
// 이때 var 키워드로 선언된 전역 변수와 함수 선언문으로 정의 된 함수는 전역 객체의 프로퍼티와 메서드가 된다.

// 2. 전역 코드 실행 - foo 함수가 호출되면 전역 코드 실행을 일시 중단하고 코드 실행 순서를 변경하여 함수 내부로 진입

// 3. foo 함수 코드 평가 - 매개 변수 a와 지역 변수 선언문이 먼저 실행, 지역 스코프 등록
// 함수 내부에서 지역변수처럼 사용할 수 있는 arguments 객체가 생성되어 지역 스코프에 등록되고 this 바인딩 결정

// 4. 함수 코드 실행 - console.log 메서드에 인수로 전달된 표현식 a+x+y가 평가된다. a,x,y 식별자는 스코프 체인을 통해 검색 한다. console.log 메서드의 실행이 종료되면서 함수 코드 실행 과정이 종료되고 함수 호출 이전으로 되돌아가 전역 코드 실행을 계속한다.

